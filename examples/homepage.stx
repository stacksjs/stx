<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>STACKS.JS Desktop</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Tahoma:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="homepage.css?v=4">
  <style>
    /* Force submenu to be hidden by default */
    .context-submenu {
      display: none !important;
    }
    .context-menu-item:hover > .context-submenu {
      display: flex !important;
    }
  </style>
  <script>
    // Data for STX template processing
    // Note: This data is also available in data.ts for client-side JavaScript with ES6 imports
    module.exports = {
      packages: [
        { title: 'AI', emoji: '🤖', desc: 'Deep AI integrations for agentic workflows' },
        { title: 'API', emoji: '🔌', desc: 'Build scalable REST & GraphQL APIs' },
        { title: 'Auth', emoji: '🔐', desc: 'Authentication and authorization' },
        { title: 'Cache', emoji: '⚡', desc: 'Multi-driver caching system' },
        { title: 'CLI', emoji: '⌨️', desc: 'Beautiful command-line interfaces' },
        { title: 'Cloud', emoji: '☁️', desc: 'Cloud infrastructure management' },
        { title: 'Database', emoji: '🗄️', desc: 'Database connections & migrations' },
        { title: 'ORM', emoji: '🗺️', desc: 'Elegant object-relational mapper' },
        { title: 'Router', emoji: '🧭', desc: 'Fast & flexible routing' },
        { title: 'Validation', emoji: '✅', desc: 'Type-safe validation' },
        { title: 'Queue', emoji: '📬', desc: 'Background job processing' },
        { title: 'Storage', emoji: '💾', desc: 'File storage abstraction' },
        { title: 'Email', emoji: '📧', desc: 'Send emails with ease' },
        { title: 'Events', emoji: '📡', desc: 'Event-driven architecture' },
        { title: 'Notifications', emoji: '🔔', desc: 'Multi-channel notifications' },
        { title: 'Testing', emoji: '🧪', desc: 'Testing utilities & helpers' },
        { title: 'Search Engine', emoji: '🔍', desc: 'Full-text search capabilities' },
        { title: 'Realtime', emoji: '⚡', desc: 'WebSocket & real-time features' },
        { title: 'X-Ray', emoji: '🔬', desc: 'Debugging & monitoring tools' },
        { title: 'Payments', emoji: '💳', desc: 'Payment processing integration' }
      ],
      desktopIcons: [
        { id: 'about', title: 'About Stacks', icon: '📄', type: 'window', section: 'about' },
        { id: 'ecosystem', title: 'Ecosystem', icon: '🌐', type: 'window', section: 'ecosystem' },
        { id: 'backend', title: 'Backend', icon: '⚙️', type: 'window', section: 'backend' },
        { id: 'frontend', title: 'Frontend', icon: '🎨', type: 'window', section: 'frontend' },
        { id: 'cloud', title: 'Cloud', icon: '☁️', type: 'window', section: 'cloud' },
        { id: 'dashboard', title: 'Dashboard', icon: '📊', type: 'window', section: 'dashboard' },
        { id: 'libraries', title: 'Libraries & CLIs', icon: '📁', type: 'window', section: 'libraries' },
        { id: 'plugins', title: 'Plugins & Actions', icon: '📁', type: 'window', section: 'plugins' },
        { id: 'templates', title: 'Templates', icon: '📁', type: 'window', section: 'templates' },
        { id: 'docs', title: 'Documentation', icon: '📚', type: 'link', url: 'https://stacksjs.org/docs' },
        { id: 'github', title: 'GitHub', icon: '💻', type: 'link', url: 'https://github.com/stacksjs/stacks' },
        { id: 'sponsor', title: 'Sponsor', icon: '💖', type: 'link', url: 'https://github.com/sponsors/chrisbbreuer' },
        { id: 'discord', title: 'Discord', icon: '💬', type: 'link', url: 'https://discord.gg/stacksjs' }
      ],
      libraries: [
        { name: 'aax', url: 'https://github.com/stacksjs/aax', desc: 'A library to work with Audible\'s .aax files.' },
        { name: 'audiox', url: 'https://github.com/stacksjs/audiox', desc: 'Powerful audio processing for your workflows.' },
        { name: 'backupx', url: 'https://github.com/stacksjs/backupx', desc: 'Comprehensive & performant database and file backup solution.' },
        { name: 'besting', url: 'https://github.com/stacksjs/besting', desc: 'A modern & extremely performant testing framework.' },
        { name: 'buddy-bot', url: 'https://github.com/stacksjs/buddy', desc: 'Just like Renovate and Dependabot, just open source & self-hosted.' },
        { name: 'bumpx', url: 'https://github.com/stacksjs/bumpx', desc: 'Bump your version numbers automatically.' },
        { name: 'bun-git-hooks', url: 'https://github.com/stacksjs/bun-git-hooks', desc: 'A simple git hooks manager for all-sized Bun projects.' },
        { name: 'bun-query-builder', url: 'https://github.com/stacksjs/bun-query-builder', desc: 'A safe, performant & fully-typed query builder.' },
        { name: 'bun-queue', url: 'https://github.com/stacksjs/queue', desc: 'A modern port of BullMQ. Optimized for Bun usage.' },
        { name: 'bun-router', url: 'https://github.com/stacksjs/router', desc: 'A powerful yet lightweight router for your server.' },
        { name: 'bunfig', url: 'https://github.com/stacksjs/bunfig', desc: 'Lightweight & smart Bun configuration loader.' },
        { name: 'clarity', url: 'https://github.com/stacksjs/clarity', desc: 'Modern debugging & logging for browser & server.' },
        { name: 'dtsx', url: 'https://github.com/stacksjs/dtsx', desc: 'Extremely fast & configurable DTS emitter.' },
        { name: 'dnsx', url: 'https://github.com/stacksjs/dnsx', desc: 'A command-line & library DNS client.' },
        { name: 'gitit', url: 'https://github.com/stacksjs/gitit', desc: 'A simple way to download templates stored using git.' },
        { name: 'gitlint', url: 'https://github.com/stacksjs/gitlint', desc: 'Minimal & fast Git commit message linting & formatting.' },
        { name: 'httx', url: 'https://github.com/stacksjs/httx', desc: 'A modern, user-friendly command-line & library HTTP client.' },
        { name: 'imgx', url: 'https://github.com/stacksjs/imgx', desc: 'Make your images load faster.' },
        { name: 'jpgx', url: 'https://github.com/stacksjs/jpgx', desc: 'A TypeScript JPEG encoder & decoder for Bun & Node.js.' },
        { name: 'localtunnels', url: 'https://github.com/stacksjs/localtunnels', desc: 'A simple and smart tunneling alternative.' },
        { name: 'logsmith', url: 'https://github.com/stacksjs/logsmith', desc: 'Forge beautiful changelogs from your commits.' },
        { name: 'pickier', url: 'https://github.com/stacksjs/pickier', desc: 'Format, lint, and more—in a fraction of second.' },
        { name: 'pngx', url: 'https://github.com/stacksjs/pngx', desc: 'Modern PNG encoder & decoder.' },
        { name: 'post', url: 'https://github.com/stacksjs/post', desc: 'The Post. A modern mail server & utilities.' },
        { name: 'qrx', url: 'https://github.com/stacksjs/qrx', desc: 'QR & Bar Code generating & reading.' },
        { name: 'rpx', url: 'https://github.com/stacksjs/rpx', desc: 'A modern, fast reverse proxy.' },
        { name: 'tlsx', url: 'https://github.com/stacksjs/tlsx', desc: 'A TLS library with automation & HTTPS by default.' },
        { name: 'ts-avif', url: 'https://github.com/stacksjs/ts-avif', desc: 'High quality & small file sizes.' },
        { name: 'ts-cache', url: 'https://github.com/stacksjs/ts-cache', desc: 'A fast, type-safe, and feature-rich caching library.' },
        { name: 'ts-clone', url: 'https://github.com/stacksjs/ts-clone', desc: 'Deeply clone arbitrary objects using TypeScript.' },
        { name: 'ts-collect', url: 'https://github.com/stacksjs/ts-collect', desc: 'A powerful, yet lightweight, Laravel-like Collections.' },
        { name: 'ts-countries', url: 'https://github.com/stacksjs/ts-countries', desc: 'Modern, lightweight, elegant country data management.' },
        { name: 'ts-datetime', url: 'https://github.com/stacksjs/ts-datetime', desc: 'Performant & powerful datetime library.' },
        { name: 'ts-gif', url: 'https://github.com/stacksjs/ts-gif', desc: 'Performant TypeScript implementation of a GIF encoder & decoder.' },
        { name: 'ts-i18n', url: 'https://github.com/stacksjs/ts-i18n', desc: 'A fully-typed i18n experience.' },
        { name: 'ts-inputs', url: 'https://github.com/stacksjs/ts-inputs', desc: 'Modern input masking.' },
        { name: 'ts-broadcasting', url: 'https://github.com/stacksjs/ts-broadcasting', desc: 'Realtime the simple & performant way.' },
        { name: 'ts-maps', url: 'https://github.com/stacksjs/ts-maps', desc: 'Modern & lightweight library for creating interactive vector maps.' },
        { name: 'ts-medium-editor', url: 'https://github.com/stacksjs/ts-medium-editor', desc: 'A modern, minimal & performant Medium-like rich text editor.' },
        { name: 'ts-mocker', url: 'https://github.com/stacksjs/ts-mocker', desc: 'Performance-focused & lightweight TypeScript faker library.' },
        { name: 'ts-ndarray', url: 'https://github.com/stacksjs/ts-ndarray', desc: 'Multidimensional arrays for JavaScript & TypeScript.' },
        { name: 'ts-numbers', url: 'https://github.com/stacksjs/ts-numbers', desc: 'Lightweight currencies, weights, phone numbers, and more.' },
        { name: 'ts-pkgx', url: 'https://github.com/stacksjs/ts-pkgx', desc: 'Automated Typed Pantry details.' },
        { name: 'ts-prompts', url: 'https://github.com/stacksjs/ts-prompts', desc: 'Build modern & pretty CLI applications.' },
        { name: 'ts-punycode', url: 'https://github.com/stacksjs/ts-punycode', desc: 'Lightweight Punycode converter.' },
        { name: 'ts-rate-limiter', url: 'https://github.com/stacksjs/ts-rate-limiter', desc: 'High-performance, flexible rate limiting library.' },
        { name: 'ts-security', url: 'https://github.com/stacksjs/ts-security', desc: 'Performant & lightweight cryptography tooling.' },
        { name: 'ts-slug', url: 'https://github.com/stacksjs/ts-slug', desc: 'Lightweight slug generation.' },
        { name: 'ts-spreadsheets', url: 'https://github.com/stacksjs/ts-spreadsheets', desc: 'Easily generate spreadsheets, like CSVs and Excel files.' },
        { name: 'ts-svg', url: 'https://github.com/stacksjs/ts-svg', desc: 'Powerful developer toolkit for working with SVGs.' },
        { name: 'ts-syntax-highlighter', url: 'https://github.com/stacksjs/ts-syntax-highlighter', desc: 'A syntax highlighter for the modern web.' },
        { name: 'ts-validation', url: 'https://github.com/stacksjs/ts-validation', desc: 'Lightweight & performant form & request data validation library.' },
        { name: 'ts-vat', url: 'https://github.com/stacksjs/ts-vat', desc: 'Simply handle EU MOSS tax & VAT regulations & calculations.' },
        { name: 'ts-webp', url: 'https://github.com/stacksjs/ts-webp', desc: 'A modern image format for the Web.' },
        { name: 'ts-web-scraper', url: 'https://github.com/stacksjs/ts-web-scraper', desc: 'Powerful, type-safe web scraping tooling.' },
        { name: 'vidx', url: 'https://github.com/stacksjs/vidx', desc: 'Make your videos load faster.' }
      ],
      plugins: [
        { name: 'action-launchpad', url: 'https://github.com/stacksjs/launchpad', desc: 'GitHub Action to install packages using Launchpad.' },
        { name: 'action-logsmith', url: 'https://github.com/stacksjs/logsmith', desc: 'Forge beautiful changelogs from your commits.' },
        { name: 'action-releaser', url: 'https://github.com/stacksjs/action-releaser', desc: 'Simply attach files, like binaries & distributables, to GitHub Releases.' },
        { name: 'bun-plugin-auto-imports', url: 'https://github.com/stacksjs/bun-plugin-auto-imports', desc: 'Auto Imports support for Bun.' },
        { name: 'bun-plugin-dotenvx', url: 'https://github.com/stacksjs/bun-plugin-dotenvx', desc: 'A Bun plugin to seamlessly work with dotenvx.' },
        { name: 'bun-plugin-dtsx', url: 'https://github.com/stacksjs/bun-plugin-dtsx', desc: 'Automatically generate your TypeScript DTS files, using Bun\'s bundler.' },
        { name: 'bun-plugin-rpx', url: 'https://github.com/stacksjs/bun-plugin-rpx', desc: 'A modern, fast reverse proxy.' },
        { name: 'bun-plugin-tlsx', url: 'https://github.com/stacksjs/bun-plugin-tlsx', desc: 'Bun plugin for a modern TLS library with automation & HTTPS by default.' },
        { name: 'bun-plugin-unocss', url: 'https://github.com/stacksjs/bun-plugin-unocss', desc: 'Instant On-demand Atomic CSS Engine - UnoCSS' },
        { name: 'vite-plugin-dotenvx', url: 'https://github.com/stacksjs/vite-plugin-dotenvx', desc: 'A Vite plugin to seamlessly work with dotenvx.' },
        { name: 'vite-plugin-layouts', url: 'https://github.com/stacksjs/vite-plugin-layouts', desc: 'Router-based layouts for your application.' },
        { name: 'vite-plugin-local', url: 'https://github.com/stacksjs/vite-plugin-local', desc: 'Pretty development URLs, and HTTPS.' },
        { name: 'vite-plugin-rpx', url: 'https://github.com/stacksjs/rpx', desc: 'A Vite plugin for a modern, fast reverse proxy.' },
        { name: 'vite-plugin-tauri', url: 'https://github.com/stacksjs/vite-plugin-tauri', desc: 'Zero-setup, highly-configurable cross-platform development.' },
        { name: 'vite-plugin-tlsx', url: 'https://github.com/stacksjs/tlsx', desc: 'Simple, yet powerful TLS library.' }
      ],
      templates: [
        { name: 'projects', url: 'https://github.com/stacksjs/projects', desc: 'A minimal personal portfolio template.' },
        { name: 'ts-starter', url: 'https://github.com/stacksjs/ts-starter', desc: 'A rather barebones Bun & TypeScript starting point for libraries & CLIs.' },
        { name: 'ts-starter-monorepo', url: 'https://github.com/stacksjs/ts-starter-monorepo', desc: 'Like our ts-starter, but optimized for monorepos.' }
      ]
    };
  </script>
</head>
<body>
  <div class="desktop">
    <!-- Desktop Icons -->
    <div class="desktop-icons">
      @foreach(desktopIcons as icon)
        <button
          class="desktop-icon"
          data-icon-id="{{ icon.id }}"
          data-icon-type="{{ icon.type }}"
          data-icon-section="{{ icon.section }}"
          data-icon-url="{{ icon.url }}"
        >
          <div class="desktop-icon-image">{{ icon.icon }}</div>
          <div class="desktop-icon-label">{{ icon.title }}</div>
        </button>
      @endforeach
    </div>

    <!-- Windows -->
    <div id="window-about" class="window" style="left: 100px; top: 80px; width: 600px; height: 500px;">
      <div class="window-titlebar">
        <div class="window-icon">📄</div>
        <div class="window-title">About Stacks</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('about')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('about')">□</button>
          <button class="window-control close" onclick="closeWindow('about')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>STACKS.JS</h2>
        <h3>Rapid Development Framework</h3>
        <p>
          A TypeScript framework for building modern web applications, APIs, and cloud infrastructure.
        </p>
        <p>
          Stacks provides an elegant, opinionated solution for common development needs with a focus on
          developer experience and productivity.
        </p>
        <p>
          Built on <strong>Bun</strong>, <strong>TypeScript</strong>, and <strong>Tauri</strong>.
        </p>
        <div style="margin-top: 24px; padding: 12px; background: #fffacd; border: 2px solid #ffd700;">
          <p style="margin: 0; font-weight: bold;">✨ Convention over configuration, while staying wholly configurable</p>
        </div>
      </div>
    </div>

    <div id="window-ecosystem" class="window" style="left: 150px; top: 100px; width: 800px; height: 600px;">
      <div class="window-titlebar">
        <div class="window-icon">🌐</div>
        <div class="window-title">Ecosystem</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('ecosystem')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('ecosystem')">□</button>
          <button class="window-control close" onclick="closeWindow('ecosystem')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Ecosystem</h2>
        <p>Out of the box, Stacks has elegant solutions for the common features needed by all modern applications.</p>

        <PackageGrid items="{{ packages }}" />
      </div>
    </div>

    <div id="window-backend" class="window" style="left: 200px; top: 120px; width: 700px; height: 550px;">
      <div class="window-titlebar">
        <div class="window-icon">⚙️</div>
        <div class="window-title">Backend Features</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('backend')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('backend')">□</button>
          <button class="window-control close" onclick="closeWindow('backend')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Backend</h2>
        <p>Simple, elegant syntax powers amazing functionality.</p>

        <div class="feature-buttons">
          <button class="feature-btn active" onclick="showFeature('backend', 'auth')">Authentication</button>
          <button class="feature-btn" onclick="showFeature('backend', 'orm')">ORM</button>
          <button class="feature-btn" onclick="showFeature('backend', 'validation')">Validation</button>
          <button class="feature-btn" onclick="showFeature('backend', 'storage')">Storage</button>
          <button class="feature-btn" onclick="showFeature('backend', 'queue')">Queues</button>
          <button class="feature-btn" onclick="showFeature('backend', 'events')">Events</button>
        </div>

        <div id="backend-feature-content">
          <h3>Authentication</h3>
          <div class="code-display">
import { Auth } from '@stacksjs/auth'

// Login user
const user = await Auth.attempt({
  email: 'user@example.com',
  password: 'secret'
})

// Get authenticated user
const current = await Auth.user()
          </div>
        </div>
      </div>
    </div>

    <div id="window-frontend" class="window" style="left: 250px; top: 140px; width: 700px; height: 550px;">
      <div class="window-titlebar">
        <div class="window-icon">🎨</div>
        <div class="window-title">Frontend Features</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('frontend')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('frontend')">□</button>
          <button class="window-control close" onclick="closeWindow('frontend')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Frontend</h2>
        <p>Develop dynamic UIs with helpers for atomic design, and much more.</p>
        <p style="color: #666; font-size: 12px;">⚡️ Powered by TypeScript, Bun & Tauri</p>

        <div class="feature-buttons">
          <button class="feature-btn active" onclick="showFeature('frontend', 'components')">Components</button>
          <button class="feature-btn" onclick="showFeature('frontend', 'ui-kit')">UI Kit</button>
          <button class="feature-btn" onclick="showFeature('frontend', 'routing')">Routing</button>
          <button class="feature-btn" onclick="showFeature('frontend', 'desktop')">Desktop</button>
        </div>

        <div id="frontend-feature-content">
          <h3>Components</h3>
          <div class="code-display">
&lt;template&gt;
  &lt;Card title="Hello"&gt;
    &lt;p&gt;Reusable components&lt;/p&gt;
  &lt;/Card&gt;
&lt;/template&gt;

&lt;script setup&gt;
// Auto-imported
&lt;/script&gt;
          </div>
        </div>
      </div>
    </div>

    <div id="window-cloud" class="window" style="left: 300px; top: 160px; width: 700px; height: 550px;">
      <div class="window-titlebar">
        <div class="window-icon">☁️</div>
        <div class="window-title">Cloud Features</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('cloud')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('cloud')">□</button>
          <button class="window-control close" onclick="closeWindow('cloud')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Cloud</h2>
        <p>Develop & maintain cloud infrastructure with ease.</p>
        <p style="color: #666; font-size: 12px;">Imagine Vercel, Vapor and Forge having been unified.</p>

        <div class="feature-buttons">
          <button class="feature-btn active" onclick="showFeature('cloud', 'deployment')">Deployment</button>
          <button class="feature-btn" onclick="showFeature('cloud', 'storage')">Storage</button>
          <button class="feature-btn" onclick="showFeature('cloud', 'cdn')">CDN</button>
          <button class="feature-btn" onclick="showFeature('cloud', 'dns')">DNS</button>
        </div>

        <div id="cloud-feature-content">
          <h3>Deployment</h3>
          <div class="code-display">
export default {
  provider: 'aws',
  region: 'us-east-1',

  compute: {
    type: 'serverless',
    memory: 1024
  }
}
          </div>
        </div>
      </div>
    </div>

    <div id="window-dashboard" class="window" style="left: 350px; top: 180px; width: 600px; height: 400px;">
      <div class="window-titlebar">
        <div class="window-icon">📊</div>
        <div class="window-title">Dashboard</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('dashboard')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('dashboard')">□</button>
          <button class="window-control close" onclick="closeWindow('dashboard')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Dashboard</h2>
        <div style="margin-top: 40px; text-align: center;">
          <div style="font-size: 64px; margin-bottom: 20px;">🚧</div>
          <h3 style="color: #0831d9; margin-bottom: 12px;">Work in Progress</h3>
          <p style="color: #666;">The Stacks Dashboard is currently under development.</p>
          <p style="color: #666; margin-top: 8px;">Check back soon for exciting new features!</p>
          <div style="margin-top: 32px; padding: 16px; background: #fffacd; border: 2px solid #ffd700; border-radius: 4px; display: inline-block;">
            <p style="margin: 0; font-weight: bold; color: #333;">💡 Coming Soon: Real-time metrics, analytics, and insights</p>
          </div>
        </div>
      </div>
    </div>

    <div id="window-libraries" class="window" style="left: 120px; top: 100px; width: 700px; height: 600px;">
      <div class="window-titlebar">
        <div class="window-icon">📁</div>
        <div class="window-title">Libraries & CLIs</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('libraries')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('libraries')">□</button>
          <button class="window-control close" onclick="closeWindow('libraries')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Libraries & CLIs</h2>
        <p style="margin-bottom: 16px;">Powerful TypeScript libraries and command-line tools for modern development.</p>
        <div class="folder-list">
          @foreach(libraries as library)
            <a href="{{ library.url }}" target="_blank" class="folder-item">
              <div class="folder-item-icon">📦</div>
              <div class="folder-item-content">
                <div class="folder-item-name">{{ library.name }}</div>
                <div class="folder-item-desc">{{ library.desc }}</div>
              </div>
            </a>
          @endforeach
        </div>
      </div>
    </div>

    <div id="window-plugins" class="window" style="left: 170px; top: 120px; width: 700px; height: 550px;">
      <div class="window-titlebar">
        <div class="window-icon">📁</div>
        <div class="window-title">Plugins & Actions</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('plugins')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('plugins')">□</button>
          <button class="window-control close" onclick="closeWindow('plugins')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Plugins & Actions</h2>
        <p style="margin-bottom: 16px;">Build plugins and GitHub Actions to enhance your development workflow.</p>
        <div class="folder-list">
          @foreach(plugins as plugin)
            <a href="{{ plugin.url }}" target="_blank" class="folder-item">
              <div class="folder-item-icon">🔌</div>
              <div class="folder-item-content">
                <div class="folder-item-name">{{ plugin.name }}</div>
                <div class="folder-item-desc">{{ plugin.desc }}</div>
              </div>
            </a>
          @endforeach
        </div>
      </div>
    </div>

    <div id="window-templates" class="window" style="left: 220px; top: 140px; width: 650px; height: 400px;">
      <div class="window-titlebar">
        <div class="window-icon">📁</div>
        <div class="window-title">Templates</div>
        <div class="window-controls">
          <button class="window-control minimize" onclick="minimizeWindow('templates')">_</button>
          <button class="window-control maximize" onclick="toggleMaximizeWindow('templates')">□</button>
          <button class="window-control close" onclick="closeWindow('templates')">×</button>
        </div>
      </div>
      <div class="window-content">
        <h2>Templates</h2>
        <p style="margin-bottom: 16px;">Starter templates to jumpstart your TypeScript projects.</p>
        <div class="folder-list">
          @foreach(templates as template)
            <a href="{{ template.url }}" target="_blank" class="folder-item">
              <div class="folder-item-icon">📋</div>
              <div class="folder-item-content">
                <div class="folder-item-name">{{ template.name }}</div>
                <div class="folder-item-desc">{{ template.desc }}</div>
              </div>
            </a>
          @endforeach
        </div>
      </div>
    </div>

    <!-- Start Menu -->
    <div class="start-menu" id="start-menu">
      <div class="start-menu-header">
        STACKS.JS
      </div>
      <div class="start-menu-user">
        <div class="start-menu-user-icon">👤</div>
        <div>Developer</div>
      </div>
      <div class="start-menu-items">
        <button class="start-menu-item" onclick="openWindow('about')">
          <div class="start-menu-item-icon">📄</div>
          <div>About Stacks</div>
        </button>
        <button class="start-menu-item" onclick="openWindow('ecosystem')">
          <div class="start-menu-item-icon">🌐</div>
          <div>Ecosystem</div>
        </button>
        <div class="start-menu-item has-submenu">
          <div class="start-menu-item-icon">⚙️</div>
          <div>Backend</div>
          <div class="start-submenu">
            <button class="start-menu-item" onclick="openWindow('backend'); setTimeout(() => showFeature('backend', 'auth'), 100)">
              <div class="start-menu-item-icon">🔐</div>
              <div>Authentication</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('backend'); setTimeout(() => showFeature('backend', 'orm'), 100)">
              <div class="start-menu-item-icon">🗺️</div>
              <div>ORM</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('backend'); setTimeout(() => showFeature('backend', 'validation'), 100)">
              <div class="start-menu-item-icon">✅</div>
              <div>Validation</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('backend'); setTimeout(() => showFeature('backend', 'storage'), 100)">
              <div class="start-menu-item-icon">💾</div>
              <div>Storage</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('backend'); setTimeout(() => showFeature('backend', 'queue'), 100)">
              <div class="start-menu-item-icon">📬</div>
              <div>Queues</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('backend'); setTimeout(() => showFeature('backend', 'events'), 100)">
              <div class="start-menu-item-icon">📡</div>
              <div>Events</div>
            </button>
          </div>
        </div>
        <div class="start-menu-item has-submenu">
          <div class="start-menu-item-icon">🎨</div>
          <div>Frontend</div>
          <div class="start-submenu">
            <button class="start-menu-item" onclick="openWindow('frontend'); setTimeout(() => showFeature('frontend', 'components'), 100)">
              <div class="start-menu-item-icon">🧩</div>
              <div>Components</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('frontend'); setTimeout(() => showFeature('frontend', 'ui-kit'), 100)">
              <div class="start-menu-item-icon">🎨</div>
              <div>UI Kit</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('frontend'); setTimeout(() => showFeature('frontend', 'routing'), 100)">
              <div class="start-menu-item-icon">🧭</div>
              <div>Routing</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('frontend'); setTimeout(() => showFeature('frontend', 'desktop'), 100)">
              <div class="start-menu-item-icon">🖥️</div>
              <div>Desktop</div>
            </button>
          </div>
        </div>
        <div class="start-menu-item has-submenu">
          <div class="start-menu-item-icon">☁️</div>
          <div>Cloud</div>
          <div class="start-submenu">
            <button class="start-menu-item" onclick="openWindow('cloud'); setTimeout(() => showFeature('cloud', 'deployment'), 100)">
              <div class="start-menu-item-icon">🚀</div>
              <div>Deployment</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('cloud'); setTimeout(() => showFeature('cloud', 'storage'), 100)">
              <div class="start-menu-item-icon">💾</div>
              <div>Storage</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('cloud'); setTimeout(() => showFeature('cloud', 'cdn'), 100)">
              <div class="start-menu-item-icon">🌍</div>
              <div>CDN</div>
            </button>
            <button class="start-menu-item" onclick="openWindow('cloud'); setTimeout(() => showFeature('cloud', 'dns'), 100)">
              <div class="start-menu-item-icon">🔗</div>
              <div>DNS</div>
            </button>
          </div>
        </div>
        <button class="start-menu-item" onclick="openWindow('dashboard')">
          <div class="start-menu-item-icon">📊</div>
          <div>Dashboard</div>
        </button>
        <div class="start-menu-separator"></div>
        <div class="start-menu-item has-submenu">
          <div class="start-menu-item-icon">💎</div>
          <div>Sponsorware</div>
          <div class="start-submenu">
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/bun-queue', '_blank')">
              <div class="start-menu-item-icon">📬</div>
              <div>bun-queue</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/bun-router', '_blank')">
              <div class="start-menu-item-icon">🧭</div>
              <div>bun-router</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/stacks-dashboard', '_blank')">
              <div class="start-menu-item-icon">📊</div>
              <div>Stacks Dashboard</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/stacks-orm-dynamodb', '_blank')">
              <div class="start-menu-item-icon">🗄️</div>
              <div>Stacks ORM - DynamoDB</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/stacks-raycast', '_blank')">
              <div class="start-menu-item-icon">🔍</div>
              <div>Stacks Raycast</div>
            </button>
          </div>
        </div>
        <div class="start-menu-item has-submenu">
          <div class="start-menu-item-icon">📱</div>
          <div>Apps</div>
          <div class="start-submenu">
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/barista', '_blank')">
              <div class="start-menu-item-icon">☕</div>
              <div>Barista</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/hush', '_blank')">
              <div class="start-menu-item-icon">🤫</div>
              <div>Hush</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/pomodoro', '_blank')">
              <div class="start-menu-item-icon">🍅</div>
              <div>Pomodoro</div>
            </button>
          </div>
        </div>
        <div class="start-menu-item has-submenu">
          <div class="start-menu-item-icon">🏗️</div>
          <div>Frameworks</div>
          <div class="start-submenu">
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/bunpress', '_blank')">
              <div class="start-menu-item-icon">📚</div>
              <div>BunPress</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/clapp', '_blank')">
              <div class="start-menu-item-icon">⌨️</div>
              <div>Clapp</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/headwind', '_blank')">
              <div class="start-menu-item-icon">💨</div>
              <div>Headwind</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/launchpad', '_blank')">
              <div class="start-menu-item-icon">🚀</div>
              <div>Launchpad</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/stacks', '_blank')">
              <div class="start-menu-item-icon">📚</div>
              <div>Stacks</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/stx', '_blank')">
              <div class="start-menu-item-icon">⚡</div>
              <div>stx</div>
            </button>
          </div>
        </div>
        <div class="start-menu-separator"></div>
        <div class="start-menu-item has-submenu">
          <div class="start-menu-item-icon">🔗</div>
          <div>Resources</div>
          <div class="start-submenu">
            <button class="start-menu-item" onclick="window.open('https://stacksjs.org/docs', '_blank')">
              <div class="start-menu-item-icon">📚</div>
              <div>Documentation</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/stacksjs/stacks', '_blank')">
              <div class="start-menu-item-icon">💻</div>
              <div>GitHub</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://github.com/sponsors/chrisbbreuer', '_blank')">
              <div class="start-menu-item-icon">💖</div>
              <div>Sponsor</div>
            </button>
            <button class="start-menu-item" onclick="window.open('https://discord.gg/stacksjs', '_blank')">
              <div class="start-menu-item-icon">💬</div>
              <div>Discord</div>
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- taskbar -->
    <div class="taskbar">
      <button class="start-button" id="start-button">
        <span class="start-logo">🪟</span>
        <span>start</span>
      </button>
      <div class="taskbar-tasks" id="taskbar-tasks"></div>
      <div class="taskbar-clock" id="clock">12:00 PM</div>
    </div>

    <!-- Notification Popup -->
    <div class="notification-popup" id="notification-popup">
      <div class="notification-header">
        <div class="notification-icon">⭐</div>
        <div class="notification-title">Build Anything</div>
        <div class="notification-count">5</div>
        <button class="notification-close" onclick="closeNotification()">×</button>
      </div>
      <div class="notification-features">
        <div class="notification-feature">
          <div class="notification-feature-icon"></div>
          <div>Modern web applications & APIs</div>
        </div>
        <div class="notification-feature">
          <div class="notification-feature-icon"></div>
          <div>One UI. 3 apps. <em>Web, Desktop & Mobile.</em></div>
        </div>
        <div class="notification-feature">
          <div class="notification-feature-icon"></div>
          <div>Cloud infrastructure & serverless</div>
        </div>
        <div class="notification-feature">
          <div class="notification-feature-icon"></div>
          <div>Type-safe with TypeScript</div>
        </div>
        <div class="notification-feature">
          <div class="notification-feature-icon"></div>
          <div>Lightning fast with Bun</div>
        </div>
      </div>
      <div class="notification-signup" id="notification-signup">
        <div class="notification-separator"></div>
        <div class="notification-signup-text">Get updates on new features & releases:</div>
        <div class="notification-signup-form">
          <input
            type="email"
            id="notification-email"
            class="notification-email-input"
            placeholder="your@email.com"
            autocomplete="email"
          />
          <button class="notification-signup-btn" onclick="handleEmailSignup()">
            Sign Up
          </button>
        </div>
      </div>
      <div class="notification-success" id="notification-success" style="display: none;">
        <div class="notification-separator"></div>
        <div class="notification-success-content">
          <div class="notification-success-icon">✓</div>
          <div class="notification-success-text">
            <div class="notification-success-title">Thanks for subscribing!</div>
            <div class="notification-success-subtitle">We'll keep you updated.</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Context Menu (outside desktop div to avoid layout inheritance) -->
  <div class="context-menu" id="context-menu" style="display: none;">
    <button class="context-menu-item has-submenu">
      <div class="context-menu-item-icon">📤</div>
      <div>Share with a friend...</div>
      <div class="context-submenu">
        <button class="context-menu-item" onclick="shareVia('twitter')">
          <div class="context-menu-item-icon">🐦</div>
          <div>Share on Twitter</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('bluesky')">
          <div class="context-menu-item-icon">🦋</div>
          <div>Share on Bluesky</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('linkedin')">
          <div class="context-menu-item-icon">💼</div>
          <div>Share on LinkedIn</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('email')">
          <div class="context-menu-item-icon">📧</div>
          <div>Share via Email</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('copy')">
          <div class="context-menu-item-icon">📋</div>
          <div>Copy Link</div>
        </button>
      </div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item" onclick="copyLogoSVG()">
      <div class="context-menu-item-icon">🎨</div>
      <div>Copy Logo as SVG</div>
    </button>
    <button class="context-menu-item" onclick="copyWordmarkSVG()">
      <div class="context-menu-item-icon">✏️</div>
      <div>Copy Wordmark as SVG</div>
    </button>
    <button class="context-menu-item" onclick="window.open('https://stacksjs.org/brand', '_blank')">
      <div class="context-menu-item-icon">📖</div>
      <div>Brand Guidelines</div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item" onclick="window.open('https://stacksjs.org/docs', '_blank')">
      <div class="context-menu-item-icon">📚</div>
      <div>Documentation</div>
    </button>
    <button class="context-menu-item" onclick="window.open('https://github.com/stacksjs/stacks', '_blank')">
      <div class="context-menu-item-icon">💻</div>
      <div>View on GitHub</div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item" onclick="window.location.reload()">
      <div class="context-menu-item-icon">🔄</div>
      <div>Refresh</div>
    </button>
  </div>

      if (isRight) return 'e';
  <!-- Icon Context Menu -->
  <div class="context-menu" id="icon-context-menu" style="display: none;">
    <button class="context-menu-item" onclick="openIconFromMenu()">
      <div class="context-menu-item-icon">📂</div>
      <div>Open</div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item" onclick="renameIcon()">
      <div class="context-menu-item-icon">✏️</div>
      <div>Rename</div>
    </button>
    <button class="context-menu-item" onclick="deleteIcon()">
      <div class="context-menu-item-icon">🗑️</div>
      <div>Delete</div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item has-submenu">
      <div class="context-menu-item-icon">📤</div>
      <div>Share with a friend...</div>
      <div class="context-submenu">
        <button class="context-menu-item" onclick="shareVia('twitter')">
          <div class="context-menu-item-icon">🐦</div>
          <div>Share on Twitter</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('bluesky')">
          <div class="context-menu-item-icon">🦋</div>
          <div>Share on Bluesky</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('linkedin')">
          <div class="context-menu-item-icon">💼</div>
          <div>Share on LinkedIn</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('email')">
          <div class="context-menu-item-icon">📧</div>
          <div>Share via Email</div>
        </button>
        <button class="context-menu-item" onclick="shareVia('copy')">
          <div class="context-menu-item-icon">📋</div>
          <div>Copy Link</div>
        </button>
      </div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item" onclick="copyLogoSVG()">
      <div class="context-menu-item-icon">🎨</div>
      <div>Copy Logo as SVG</div>
    </button>
    <button class="context-menu-item" onclick="copyWordmarkSVG()">
      <div class="context-menu-item-icon">✏️</div>
      <div>Copy Wordmark as SVG</div>
    </button>
    <button class="context-menu-item" onclick="window.open('https://stacksjs.org/brand', '_blank')">
      <div class="context-menu-item-icon">📖</div>
      <div>Brand Guidelines</div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item" onclick="window.open('https://stacksjs.org/docs', '_blank')">
      <div class="context-menu-item-icon">📚</div>
      <div>Documentation</div>
    </button>
    <button class="context-menu-item" onclick="window.open('https://github.com/stacksjs/stacks', '_blank')">
      <div class="context-menu-item-icon">💻</div>
      <div>View on GitHub</div>
    </button>
    <div class="context-menu-separator"></div>
    <button class="context-menu-item" onclick="window.location.reload()">
      <div class="context-menu-item-icon">🔄</div>
      <div>Refresh</div>
    </button>
  </div>

  <script type="module" src="homepage.ts"></script>
</body>
</html>
