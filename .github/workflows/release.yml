name: CI

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        # env:
        #   BUN_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        with:
          bun-version: latest

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: |
          bun install
          bun add -g logsmith

      - name: Publish to npm
        run: ./scripts/publish-packages.sh
        env:
          BUN_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Create GitHub release
        run: bunx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Attach Binaries
        uses: stacksjs/action-releaser@v1.1.0
        with:
          files: |
            packages/stx/bin/stx-linux-x64.zip
            packages/stx/bin/stx-linux-arm64.zip
            packages/stx/bin/stx-windows-x64.zip
            packages/stx/bin/stx-darwin-x64.zip
            packages/stx/bin/stx-darwin-arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate Release Changelog
        run: |
          # Generate changelog for this release only
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            logsmith --from "$PREVIOUS_TAG" --to "${{ steps.version.outputs.VERSION }}" \
              --theme github --format markdown --output RELEASE_NOTES.md
          else
            logsmith --to "${{ steps.version.outputs.VERSION }}" \
              --theme github --format markdown --output RELEASE_NOTES.md
          fi

      - name: Update Full Changelog
        run: |
          logsmith --theme github --output CHANGELOG.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "docs: update changelog for ${{ steps.version.outputs.VERSION }}" || exit 0
          git push origin HEAD:main

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
